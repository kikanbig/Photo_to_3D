# TRELLIS ML Server for RunPod
FROM runpod/pytorch:2.1.0-py3.10-cuda11.8.0-devel-ubuntu22.04

# Set working directory
WORKDIR /workspace

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    wget \
    curl \
    build-essential \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libffi-dev \
    libssl-dev \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY ml_server/requirements_simple.txt ./requirements.txt
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Install easydict separately (critical for TRELLIS)
RUN pip install --no-cache-dir easydict==1.10.0
RUN python -c "import easydict; print('✅ easydict installed successfully')"

# Install open3d separately (force upgrade to resolve conflicts)
RUN pip install --no-cache-dir --force-reinstall --no-deps open3d==0.17.0
RUN pip install --no-cache-dir numpy>=1.20.0 pillow>=8.0.0 matplotlib>=3.0.0 plotly>=5.0.0
RUN python -c "
import sys
print('🔍 Python version:', sys.version)
print('🔍 Python path:', sys.path[:3])
try:
    import numpy
    print('✅ numpy:', numpy.__version__)
except Exception as e:
    print('❌ numpy error:', e)
try:
    import matplotlib
    print('✅ matplotlib:', matplotlib.__version__)
except Exception as e:
    print('❌ matplotlib error:', e)
try:
    import plotly
    print('✅ plotly:', plotly.__version__)
except Exception as e:
    print('❌ plotly error:', e)
try:
    import open3d
    print('✅ open3d GPU version installed:', open3d.__version__)
except Exception as e:
    print('❌ open3d import error:', e)
    import traceback
    traceback.print_exc()
"

# Clone TRELLIS repository
RUN git clone https://github.com/microsoft/TRELLIS.git /workspace/trellis_source

# Install TRELLIS properly
WORKDIR /workspace/trellis_source
RUN echo "✅ TRELLIS cloned successfully"
RUN ls -la

# Install TRELLIS dependencies if they exist
RUN if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi
RUN if [ -f "setup.py" ]; then pip install -e .; fi
RUN if [ -f "pyproject.toml" ]; then pip install -e .; fi

# Add TRELLIS to Python path
RUN echo "export PYTHONPATH=/workspace/trellis_source:$PYTHONPATH" >> ~/.bashrc

# Copy our ML server code
WORKDIR /workspace
COPY ml_server/ .

# Set Python path
ENV PYTHONPATH=/workspace:/workspace/trellis_source
ENV CUDA_VISIBLE_DEVICES=0
ENV TORCH_CUDA_ARCH_LIST="6.1 7.0 7.5 8.0 8.6 9.0"

# Expose port for RunPod
EXPOSE 8000

# Start command
CMD ["python", "handler.py"]
