#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Photo to 3D
"""
import os
import sys
import asyncio
import requests
from io import BytesIO
from PIL import Image

# Add the app directory to Python path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'app'))

def create_test_image():
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    img = Image.new('RGB', (256, 256), color=(73, 109, 137))
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ BytesIO
    img_bytes = BytesIO()
    img.save(img_bytes, format='PNG')
    img_bytes.seek(0)
    
    return img_bytes

def test_health_endpoint():
    """–¢–µ—Å—Ç health endpoint"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /health endpoint...")
    
    try:
        response = requests.get("http://localhost:8002/health", timeout=5)
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"‚úÖ –û—Ç–≤–µ—Ç: {response.json()}")
        return True
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_generation_endpoint():
    """–¢–µ—Å—Ç generation endpoint"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/v1/generation/generate endpoint...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        test_image = create_test_image()
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        files = {
            'image': ('test.png', test_image, 'image/png')
        }
        
        data = {
            'seed': 42,
            'ss_guidance_strength': 7.5,
            'ss_sampling_steps': 12,
            'slat_guidance_strength': 3.0,
            'slat_sampling_steps': 12
        }
        
        response = requests.post(
            "http://localhost:8002/api/v1/generation/generate",
            files=files,
            data=data,
            timeout=30
        )
        
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ Task ID: {result.get('task_id')}")
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {result.get('status')}")
            return result.get('task_id')
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def test_status_endpoint(task_id):
    """–¢–µ—Å—Ç status endpoint"""
    if not task_id:
        return
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/v1/generation/status/{task_id} endpoint...")
    
    try:
        response = requests.get(
            f"http://localhost:8002/api/v1/generation/status/{task_id}",
            timeout=5
        )
        
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {result.get('status')}")
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ: {result.get('message')}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
            if result.get('glb_url'):
                print(f"‚úÖ GLB URL: {result.get('glb_url')}")
            if result.get('ply_url'):
                print(f"‚úÖ PLY URL: {result.get('ply_url')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_download_endpoints(task_id):
    """–¢–µ—Å—Ç download endpoints"""
    if not task_id:
        return
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ download endpoints...")
    
    # –¢–µ—Å—Ç GLB download
    try:
        response = requests.get(
            f"http://localhost:8002/api/v1/generation/download/{task_id}/glb",
            timeout=5
        )
        print(f"‚úÖ GLB Download —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print(f"‚úÖ GLB —Ä–∞–∑–º–µ—Ä: {len(response.content)} –±–∞–π—Ç")
    except Exception as e:
        print(f"‚ùå GLB Download –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç PLY download
    try:
        response = requests.get(
            f"http://localhost:8002/api/v1/generation/download/{task_id}/ply",
            timeout=5
        )
        print(f"‚úÖ PLY Download —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print(f"‚úÖ PLY —Ä–∞–∑–º–µ—Ä: {len(response.content)} –±–∞–π—Ç")
    except Exception as e:
        print(f"‚ùå PLY Download –æ—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API Photo to 3D\n")
    
    # –¢–µ—Å—Ç 1: Health endpoint
    if not test_health_endpoint():
        print("\n‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 8002")
        return
    
    # –¢–µ—Å—Ç 2: Generation endpoint
    task_id = test_generation_endpoint()
    
    # –¢–µ—Å—Ç 3: Status endpoint
    test_status_endpoint(task_id)
    
    # –¢–µ—Å—Ç 4: Download endpoints
    test_download_endpoints(task_id)
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
